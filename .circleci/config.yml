version: 2
jobs:
  build:
    working_directory: /go/src/github.com/gramLabs/cordelia
    docker:
      - image: "circleci/golang:1.12.5"
    steps:
      - checkout
      - run:
          name: Install kubebuilder
          command: |
            version=1.0.8
            arch=amd64
            curl -L -O https://github.com/kubernetes-sigs/kubebuilder/releases/download/v${version}/kubebuilder_${version}_linux_${arch}.tar.gz
            tar -zxvf kubebuilder_${version}_linux_${arch}.tar.gz
            mv kubebuilder_${version}_linux_${arch} kubebuilder && sudo mv kubebuilder /usr/local/
            export PATH=$PATH:/usr/local/kubebuilder/bin
      - run:
          name: Run tests
          command: make test
      - run:
          name: Build manager binary
          command: make manager
  deploy:
    docker:
      - image: google/cloud-sdk
    steps:
      - checkout
      - run:
          name: Bootstrap Deployment
          command: .circleci/bootstrap.sh
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Authorize Google Cloud
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet auth configure-docker
      - run:
          name: Docker Build
          command: |
            make docker-build
      - run:
          name: Docker Push
          command: |
            make docker-push
            docker tag "${IMG}" "${IMG%%:*}:latest"
            docker push "${IMG%%:*}:latest"
            docker tag "${SETUPTOOLS_IMG}" "${SETUPTOOLS_IMG%%:*}:latest"
            docker push "${SETUPTOOLS_IMG%%:*}:latest"
      - run:
          name: Build Tool
          command: |
            make tool_all
      - store_artifacts:
          path: bin/cordelia-darwin-amd64
      - store_artifacts:
          path: bin/cordelia-linux-amd64
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - build
      - deploy:
          context: carbon-relay-dev
          filters:
            branches:
              only: master
  deploy-release:
    jobs:
      - deploy:
          context: carbon-relay-oss
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
