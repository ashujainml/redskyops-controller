name: Matrix workflow
on:
  push:
    branches:
      - master
    tags:
      - v*

jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA: build.${{ github.run_number }}
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.14'
      - name: Cache Go Modules
        uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Set up Google Cloud Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.2
        with:
          service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Bootstrap
        run: |
          TAG=${GITHUB_SHA:0:8}.${GITHUB_RUN_ID}
          echo "::set-env name=IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/redskyops-controller:${TAG}"
          echo "::set-env name=REDSKYCTL_IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/redskyctl:${TAG}"
          echo "::set-env name=SETUPTOOLS_IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/setuptools:${TAG}"
          echo "::set-env name=PULL_POLICY::Always"
          gcloud --quiet auth configure-docker
      - name: Build controller
        run: |
          make docker-build
          make docker-push
      - name: Build tool
        uses: goreleaser/goreleaser-action@v1
        with:
          args: release --skip-sign --rm-dist
      - name: Upload macOS binary
        uses: actions/upload-artifact@v2
        with:
          name: redskyctl_darwin_amd64
          path: dist/redskyctl-darwin-amd64.tar.gz
      - name: Upload Linux binary
        uses: actions/upload-artifact@v2
        with:
          name: redskyctl_linux_amd64
          path: dist/redskyctl-linux-amd64.tar.gz
  test:
    name: Build and Deploy
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        # Version listings can be found here:
        # https://github.com/kubernetes-sigs/kind/releases
        node:
          - v1.18.0
          - v1.17.0
          - v1.16.4
          - v1.15.7
          - v1.14.10
          #- v1.13.12
          #- v1.12.10
          #- v1.11.10
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Download redskyctl
        uses: actions/download-artifact@v2
        with:
          name: redskyctl_linux_amd64
          path: dist/redskyctl_linux_amd64
      - name: Rename binary because dumbness
        run: |
          tar -zxf dist/redskyctl_linux_amd64/redskyctl-linux-amd64.tar.gz \
              -C dist/redskyctl_linux_amd64
      - name: KinD (Kubernetes in Docker) Initialization
        uses: engineerd/setup-kind@v0.3.0
        with:
          image: kindest/node:${{ matrix.node }}
      - name: RedSky Quickstart
        run: |
          hack/integration.sh
      - name: The job has failed
        if: ${{ failure() }}
        run: |
          kubectl get trial,experiment,svc,pod -o wide
          kubectl get pods -o wide -l redskyops.dev/experiment=postgres-example
