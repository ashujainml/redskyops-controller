name: Main workflow
on:
  push:
    branches:
      - master
jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    env:
      BUILD_METADATA: build.${{ github.run_id }}
      GIT_COMMIT: ${{ github.sha }}
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13.4'
      - name: Set up Google Cloud Platform
        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.2
        with:
          service_account_email: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_EMAIL }}
          service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GOOGLE_PROJECT_ID }}
      - name: Bootstrap
        run: |
          if [ -z "${GITHUB_REF/refs\/tags\/*/}" ]; then
            echo "::set-env name=VERSION::${GITHUB_REF##*/}"
            TAG=${GITHUB_REF##*/v}
            DOCKER_TAG=latest
          else
            TAG=${GITHUB_SHA:0:8}.${GITHUB_RUN_ID}
            DOCKER_TAG=canary
          fi
          echo "::set-env name=IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/redskyops-controller:${TAG}"
          echo "::set-env name=REDSKYCTL_IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/redskyctl:${TAG}"
          echo "::set-env name=SETUPTOOLS_IMG::gcr.io/${{ secrets.GOOGLE_PROJECT_ID }}/setuptools:${TAG}"
          echo "::set-env name=PULL_POLICY::Always"
          echo "::set-env name=DOCKER_TAG::${DOCKER_TAG}"
          gcloud --quiet auth configure-docker
      - name: Build controller
        run: |
          make docker-build
          make docker-push
          hack/changelog.sh > bin/changelog.txt
      - name: Build tool
        uses: goreleaser/goreleaser-action@v1
        with:
          args: release --rm-dist --release-notes bin/changelog.txt
        env:
          GITHUB_TOKEN: ${{ secrets.BMASTERS_TOKEN }}
      - name: Tag Docker images
        run: |
          docker tag "${IMG}" "${IMG%%:*}:${DOCKER_TAG}"
          docker push "${IMG%%:*}:${DOCKER_TAG}"
          docker tag "${REDSKYCTL_IMG}" "${REDSKYCTL_IMG%%:*}:${DOCKER_TAG}"
          docker push "${REDSKYCTL_IMG%%:*}:${DOCKER_TAG}"
          docker tag "${SETUPTOOLS_IMG}" "${SETUPTOOLS_IMG%%:*}:${DOCKER_TAG}"
          docker push "${SETUPTOOLS_IMG%%:*}:${DOCKER_TAG}"
      - name: Clean up dist
        run: 'rm dist/config.yaml dist/*.tar.gz'
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: dist
          path: dist
