# TODO This is a workaround for Kustomize not supporting common labels that are NOT applied to selectors
apiVersion: v1
kind: Namespace
metadata:
  name: redsky-system
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: experiments.redskyops.dev
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: trials.redskyops.dev
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manager-role
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: proxy-role
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manager-rolebinding
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: proxy-rolebinding
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: v1
kind: Secret
metadata:
  name: client-config
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: v1
kind: Service
metadata:
  name: controller-manager-metrics-service
  namespace: system
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: controller-manager
  namespace: system
  labels:
    app.kubernetes.io/version: VERSION
    app.kubernetes.io/managed-by: redskyctl
